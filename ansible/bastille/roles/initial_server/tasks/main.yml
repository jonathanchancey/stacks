- name: install rke2 on first server
  hosts: initial_server

  tasks:
    - name: Create directories if they don't exist
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0755
        recurse: yes
      loop:
        - "{{ CONFDIR }}"
        - "{{ WATCHDIR }}"
        - "{{ NETWORKDIR }}"
    - name: Get hostname short
      shell: |
        hostname -s
      register: hostname_short
    - name: Get hostname fqdn
      shell: |
        hostname -f
      register: hostname_fqdn
    - name: Print hostname fqdn and short
      debug:
        msg:
        - "hostname short '{{ hostname_short.stdout }}'"
        - "hostname fqdn: '{{ hostname_fqdn.stdout }}'"
    - name: Create config.yaml
      copy:
        dest: "{{ CONFFILE }}"
        content: |
          tls-san:
            - "{{ hostname_short.stdout }}"
            - "{{ hostname_fqdn.stdout }}"
            - "{{ SERVER_ADDRESS_SHORT }}"
            - "{{ SERVER_ADDRESS_FQDN }}"
            - "{{ SERVER_FAILOVER_IP }}"
          write-kubeconfig-mode: 0644
      notify: "rke2-server service restart"
    - name: Configure NetworkManager to ignore calico/flannel related network interfaces
      copy:
        dest: "{{ NETWORKFILE }}"
        content: |
          [keyfile]
          unmanaged-devices=interface-name:cali*;interface-name:flannel*
    - name: Install rke2 server
      become: true
      shell: |
        curl -sfL https://get.rke2.io | INSTALL_RKE2_VERSION="{{INSTALL_RKE2_VERSION }}" sh -
      notify: "rke2-server service start"
    - name: add rke2 dir to PATH.
      copy:
        dest: /etc/profile.d/custom-path.sh
        content: 'PATH=$PATH:/opt/rke2/bin'

  handlers:
    - name: ensure rke2-server is running
      systemd:
        state: started
        enabled: true
        name: rke2-server
      listen: "rke2-server service start"
    - name: ensure rke2-server is restarted
      systemd:
        state: restarted
        name: rke2-server
      listen: "rke2-server service restart"
    - name: obtain node-token
      ansible.builtin.fetch:
        src: /var/lib/rancher/rke2/server/node-token
        dest: autogenerated/node-token
        flat: yes
      listen: "rke2-server service start"
    - name: obtain kubeconfig
      ansible.builtin.fetch:
        src: /etc/rancher/rke2/rke2.yaml
        dest: autogenerated/rke2.yaml
        flat: yes
      listen: "rke2-server service start"
