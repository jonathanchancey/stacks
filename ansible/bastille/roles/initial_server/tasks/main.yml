---
  - name: Create directories if they don't exist
    become: true
    file:
      path: "{{ item }}"
      state: directory
      owner: rke2
      mode: 0755
      recurse: yes
    loop:
      - "{{ CONFDIR }}"
      - "{{ WATCHDIR }}"
      - "{{ NETWORKDIR }}"
  - name: Get hostname short
    shell: |
      hostname -s
    register: hostname_short
  - name: Get hostname fqdn
    shell: |
      hostname -f
    register: hostname_fqdn
  - name: Print hostname fqdn and short
    debug:
      msg:
      - "hostname short '{{ hostname_short.stdout }}'"
      - "hostname fqdn: '{{ hostname_fqdn.stdout }}'"
  - name: Create config.yaml
    become: true
    copy:
      dest: "{{ CONFFILE }}"
      content: |
        tls-san:
          - "{{ hostname_short.stdout }}"
          - "{{ hostname_fqdn.stdout }}"
          - "{{ SERVER_ADDRESS_SHORT }}"
          - "{{ SERVER_ADDRESS_FQDN }}"
          - "{{ SERVER_FAILOVER_IP }}"
        write-kubeconfig-mode: 0644
    notify: "rke2-server service restart"
  - name: Configure NetworkManager to ignore calico/flannel related network interfaces
    become: true
    copy:
      dest: "{{ NETWORKFILE }}"
      content: |
        [keyfile]
        unmanaged-devices=interface-name:cali*;interface-name:flannel*
  - name: Install rke2 server
    become: true
    shell: |
      curl -sfL https://get.rke2.io | INSTALL_RKE2_VERSION="{{INSTALL_RKE2_VERSION }}" sh -
  - name: ensure rke2-server is enabled
    become: true
    systemd:
      state: started
      enabled: true
      name: rke2-server
  - name: ensure containerd is enabled
    become: true
    systemd:
      state: started
      enabled: true
      name: containerd
  - name: add rke2 dir to PATH
    become: true
    copy:
      dest: /etc/profile.d/custom-path.sh
      content: 'PATH=$PATH:/var/lib/rancher/rke2/bin'
  - name: obtain node-token
    become: true
    ansible.builtin.slurp:
      src: /var/lib/rancher/rke2/server/node-token
    register: nodetoken
  # - name: Print returned information
  #   ansible.builtin.debug:
  #     msg: "{{ nodetoken['content'] | b64decode | regex_replace('\\n', '')}}"
  - name: Decode and clean up nodetoken
    set_fact:
      TOKEN: "{{ nodetoken['content'] | b64decode | regex_replace('\\n', '') }}"
  - name: Download kube-vip RBAC file
    become: true
    get_url:
      url: https://kube-vip.io/manifests/rbac.yaml
      dest: "{{ WATCHDIR }}/kube-vip-rbac.yaml"
      owner: rke2
      mode: 0644
  - name: Deploy kube-vip
    become: true
    shell: |
      /var/lib/rancher/rke2/bin/ctr --namespace k8s.io image pull "{{ KUBE_VIP_IMAGE }}":"{{ KUBE_VIP_IMAGE_TAG }}"
      /var/lib/rancher/rke2/bin/ctr --namespace k8s.io run --rm --net-host "{{ KUBE_VIP_IMAGE }}":"{{ KUBE_VIP_IMAGE_TAG }}" vip /kube-vip \
      manifest daemonset \
      --arp \
      --interface "{{ INTERFACE }}" \
      --address "{{ VIP }}" \
      --controlplane \
      --leaderElection \
      --taint \
      --services \
      --inCluster | tee "{{ WATCHDIR }}/kube-vip.yaml"
  - name: Download metallb-native
    get_url:
      url: https://raw.githubusercontent.com/metallb/metallb/{{ METALLB_IMAGE_TAG }}/config/manifests/metallb-native.yaml
      dest: "{{ WATCHDIR }}/metallb-native.yaml"
      owner: rke2
      mode: 0644
  - name: Create ipaddresspool.yaml
    copy:
      dest: "{{ WATCHDIR }}/ipaddresspool.yaml"
      content: |
        apiVersion: metallb.io/v1beta1
        kind: IPAddressPool
        metadata:
          name: metallb-address-pool
          namespace: metallb-system
        spec:
          addresses:
          - {{ METALLB_IP_RANGE }}
        ---
        apiVersion: metallb.io/v1beta1
        kind: L2Advertisement
        metadata:
          name: metallb-advertisement
          namespace: metallb-system
        spec:
          ipAddressPools:
          - metallb-address-pool
  - name: download cert-manager
    get_url:
      url: https://github.com/cert-manager/cert-manager/releases/download/{{ CERT_MANAGER_IMAGE_TAG }}/cert-manager.yaml
      dest: "{{ WATCHDIR }}/cert-manager.yaml"
      owner: rke2
      mode: 0644

  - name: Deploy Traefik
    copy:
      src: traefik.yaml
      dest: "{{ WATCHDIR }}/traefik.yaml"
      owner: rke2
      mode: '0644'
