---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  count:
    desc: Count kustomize config
    cmd: flux-local build ks --path flux/academy/ | kustomize cfg count
  diff:
    desc: Flux diff
    cmd: flux-local diff ks --path flux/academy/
  diffhelm:
    desc: Flux diff
    cmd: flux-local diff hr --path flux/academy/
  test-without-helm:
    desc: Flux test
    cmd: flux-local test --path flux/academy/
  test:
    desc: Flux test
    cmd: flux-local test --enable-helm --path flux/academy/
  etcd-save:
    desc: Flux test
    cmd: ssh -i ~/.ssh/id_seki_rsa napkin@acolyte-00 -t "sudo k3s etcd-snapshot save"
  rek:
    desc: reconcile flux-system kustomization
    cmd: flux reconcile kustomization -n flux-system flux-system
  reconcile:
    desc: Force update Flux to pull in changes from your Git repository
    cmd: flux --namespace flux-system reconcile kustomization cluster --with-source
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which flux
  resources:
    desc: Gather common resources in your cluster, useful when asking for support
    cmds:
      - for: { var: RESOURCE }
        cmd: KUBECONFIG={{.KUBECONFIG}} kubectl get {{.ITEM}} {{.CLI_ARGS | default "-A"}}
    vars:
      RESOURCE: >-
        nodes
        gitrepositories
        kustomizations
        helmrepositories
        helmreleases
        certificates
        certificaterequests
        ingresses
        pods
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which kubectl
  venv:
    desc: Set up virtual environment
    cmds:
      - python3 -m venv {{.VIRTUAL_ENV}}
      - "{{.VIRTUAL_ENV}}/bin/python3 -m pip install --upgrade pip setuptools wheel"
      - '{{.VIRTUAL_ENV}}/bin/python3 -m pip install --upgrade --requirement "{{.REQUIREMENTS_TXT}}"'
    sources:
      - "{{.REQUIREMENTS_TXT}}"
    generates:
      - "{{.VIRTUAL_ENV}}/pyvenv.cfg"
    preconditions:
      - test -f {{.REQUIREMENTS_TXT}}
      - which python3
