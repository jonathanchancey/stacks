---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  count:
    desc: Count kustomize config
    cmd: flux-local build ks --path {{.KUBERNETES_DIR}} | kustomize cfg count
  diff-ks:
    desc: Flux diff
    cmd: flux-local diff ks --path {{.KUBERNETES_DIR}}
  diff-hr:
    desc: Flux diff
    cmd: flux-local diff hr --path {{.KUBERNETES_DIR}}
  suspend-git:
    desc: Flux suspend academy
    cmd: flux suspend source git academy
  resume-git:
    desc: Flux resume academy
    cmd: flux resume source git academy
  list:
    desc: Flux get ks
    cmd: flux get ks
  test:
    desc: Flux test
    cmd: flux-local test --path {{.KUBERNETES_DIR}}
  test-helmful:
    desc: Flux test
    cmd: flux-local test --enable-helm --path {{.KUBERNETES_DIR}}
  etcd-save:
    desc: Flux test
    cmd: ssh -i ~/.ssh/id_seki_rsa napkin@acolyte-00 -t "sudo k3s etcd-snapshot save"
  resume:
    desc: resume flux ks [KS=required]
    cmd: flux resume kustomization -n flux-system {{.KS}}
    requires:
      vars: [KS]
  suspend:
    desc: suspend flux ks [KS=required]
    cmd: flux suspend kustomization -n flux-system {{.KS}}
    requires:
      vars: [KS]
  reconcile:
    desc: Force update Flux to pull in changes from your Git repository
    cmd: flux --namespace flux-system reconcile kustomization academy-cluster --with-source
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which flux
  ks-*:
    desc: Apply a Flux KS [PATH=required]
    cmd: >
      flux build --namespace flux-system ks {{base .PATH}}
      --kustomization-file {{.KUBERNETES_DIR}}/{{.PATH}}/ks.yaml
      --path {{.KUBERNETES_DIR}}/{{.PATH}}{{if contains .KUSTOMIZATION "not found"}} --dry-run{{end}}
      | yq 'with(select(.apiVersion == "kustomize.toolkit.fluxcd.io/v1" and .kind == "Kustomization"); .metadata.namespace = "flux-system")' -
      | kubectl {{.OPERATION}} {{if eq .OPERATION "apply"}}--server-side  --field-manager=kustomize-controller{{end}} --filename -
    requires:
      vars: [PATH]
    vars:
      OPERATION: "{{index .MATCH 0}}"
      KUSTOMIZATION:
        sh: flux --namespace flux-system get kustomizations {{base .PATH}}
    preconditions:
      - test -f {{.KUBERNETES_DIR}}/{{.PATH}}/ks.yaml
      - which flux kubectl yq
  resources:
    desc: Gather common resources in your cluster, useful when asking for support
    cmds:
      - for: { var: RESOURCE }
        cmd: KUBECONFIG={{.KUBECONFIG}} kubectl get {{.ITEM}} {{.CLI_ARGS | default "-A"}}
    vars:
      RESOURCE: >-
        nodes
        gitrepositories
        kustomizations
        helmrepositories
        helmreleases
        certificates
        certificaterequests
        ingresses
        pods
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which kubectl
  cull:
    desc: Delete pods with a Failed/Pending/Succeeded phase
    cmds:
      - for:
          matrix:
            PHASE: [Failed, Pending, Succeeded]
        cmd: kubectl delete pods --all-namespaces --field-selector status.phase={{.ITEM.PHASE}} --ignore-not-found=true
