# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
spec:
  interval: 30m
  chart:
    spec:
      chart: immich
      version: 0.8.5
      sourceRef:
        kind: HelmRepository
        name: immich
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: -1
  values:
    env:
      IMMICH_MEDIA_LOCATION: /usr/src/app/upload
      REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
      DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
      DB_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: immich-creds
            key: DB_PASSWORD
      DB_USERNAME:
        valueFrom:
          secretKeyRef:
            name: immich-creds
            key: DB_USERNAME
      DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
      IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
      # IMMICH_LOG_LEVEL: debug
    image:
      # https://github.com/immich-app/immich/releases
      tag: v1.133.1
    immich:
      metrics:
        enabled: true
      persistence:
        library:
          existingClaim: personal-nfs-pvc
          globalMounts:
            - path: /usr/src/app/upload
      # configuration is immich-config.json converted to yaml
      # ref: https://immich.app/docs/install/config-file/
      configuration: {}
    postgresql:
      enabled: true
      image:
        repository: ghcr.io/immich-app/postgres
        tag: 14-vectorchord0.4.3-pgvectors0.2.0
      global:
        storageClass: longhorn
        postgresql:
          auth:
            username: postgres
            database: immich
            existingSecret: immich-db-credentials
      primary:
        resourcePreset: small
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
            ephemeral-storage: 50Mi
          limits:
            memory: 2048Mi
            ephemeral-storage: 2Gi
        # initdb:
        #   scripts:
        #     create-extensions.sql: |
        #       CREATE EXTENSION cube;
        #       CREATE EXTENSION earthdistance;
        #       CREATE EXTENSION vectors;
    redis:
      enabled: true
      architecture: standalone
      global:
        storageClass: longhorn
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
            ephemeral-storage: 50Mi
          limits:
            memory: 1024Mi
            ephemeral-storage: 2Gi
      auth:
        enabled: false
    server:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-server
        pullPolicy: IfNotPresent
      persistence:
        external:
          enabled: true
          existingClaim: personal-external-library-nfs-pvc
          readOnly: true
        external-coop:
          enabled: true
          existingClaim: pvc-immich-el-coop-smb
          readOnly: true
      resources:
        requests:
          cpu: 750m
          memory: 512Mi
          ephemeral-storage: 50Mi
        limits:
          memory: 4096Mi
          ephemeral-storage: 2Gi
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - lich-00
      ingress:
        main:
          enabled: false
    machine-learning:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-machine-learning
        pullPolicy: IfNotPresent
      env:
        TRANSFORMERS_CACHE: /cache
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - lich-00
      resources:
        requests:
          cpu: 200m
          memory: 256Mi
        limits:
          memory: 1Gi
      persistence:
        cache:
          enabled: true
          size: 10Gi
          # set this to pvc to avoid downloading the ML models every start
          type: emptyDir
          accessMode: ReadWriteMany
          storageClass: local-path
