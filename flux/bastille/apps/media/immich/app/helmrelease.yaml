---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      server:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: immich-secret
          configmap.reloader.stakater.com/reload: immich-configmap

        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: &release v2.0.1
            env:
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              IMMICH_TELEMETRY_INCLUDE: all
              DB_HOSTNAME: "immich-postgres-rw.database.svc.cluster.local"
              DB_PORT: 5432
              DB_DATABASE_NAME: "immich"
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: DB_USERNAME
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: DB_PASSWORD
            envFrom:
              - configMapRef:
                  name: immich-configmap
            resources:
              requests:
                cpu: 400m
                memory: 512Mi
                ephemeral-storage: 50Mi
              limits:
                memory: 4096Mi
                ephemeral-storage: 2Gi

      machine-learning:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: *release
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
            env:
              MPLCONFIGDIR: "/cache/matplotlib"
              TRANSFORMERS_CACHE: "/cache"
              IMMICH_MEDIA_LOCATION: *mediaLocation
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 2048Mi

      valkey:
        containers:
          app:
            image:
              repository: ghcr.io/ahinko/valkey
              tag: 8.1.4
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                memory: 1024Mi

    service:
      server:
        controller: server
        ports:
          http:
            port: &port 2283
          metrics:
            port: 8081
          microservice-metrics:
            port: 8082
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      valkey:
        controller: valkey
        ports:
          http:
            port: 6379

    serviceMonitor:
      server:
        serviceName: immich-server
        endpoints:
          - port: metrics
            path: /metrics
          - port: microservice-metrics
            path: /metrics

    route:
      server:
        hostnames: ["photos.chancey.dev"]
        parentRefs:
          - name: edge
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - identifier: server
                port: *port

    persistence:
      library:
        type: nfs
        server: vents.internal
        path: /mnt/scale-worm/strawberry/personal/upload
        globalMounts:
          - path: *mediaLocation
      external:
        type: nfs
        server: vents.internal
        path: /mnt/scale-worm/strawberry/personal/external-library
        globalMounts:
          - path: /external
            readOnly: true
      external-coop:
        type: persistentVolumeClaim
        existingClaim: pvc-immich-external-coop-smb
        globalMounts:
          - path: /external-coop
            readOnly: true
      tmpfs:
        type: emptyDir
        advancedMounts:
          server:
            main:
              - path: /usr/src/app/.reverse-geocoding-dump
                subPath: geocoding
      machine-learning-cache:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        storageClass: ceph-block
        size: 15Gi
        advancedMounts:
          machine-learning:
            main:
              - path: /cache
